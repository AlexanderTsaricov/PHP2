<?php
require __DIR__ . '/vendor/autoload.php'; // ✅ самый прямой путь
use Dotenv\Dotenv;

$dotenv = Dotenv::createImmutable(__DIR__);
$dotenv->load(); 

use App\src\Controllers\DeamonEventsSender;
use App\src\Controllers\EventSender;
use App\src\Controllers\Handlers\EventHandler;
use App\src\Controllers\Save_event;
use App\src\Storage\Database;
use App\src\Controllers\Get_events;

/**
 * c or command - command
 * n or name - name event
 * r or receiver - id user
 * t or text - text message
 * d or crone - date and time for crone
 */
$options = getopt("c:", ["name:", "receiver:", "text:", "cron:"]);
$params = [];

$command = $options["c"] ? $options["c"] : null;
$db = new Database();
$connection = $db::connect();
$sql = <<<SQL
    CREATE TABLE IF NOT EXISTS events (
        id INTEGER PRIMARY KEY AUTOINCREMENT,
        name TEXT,
        receiver INTEGER,
        text TEXT,
        cron TEXT
    )
SQL;
$connection->exec($sql);

if ($command === null) {
    die("Error command parametr: don't have parametr -c (command). Please add parametr\n");
}

switch ($command) {
    case "save_event":
        $save_event = new Save_event();
        $save_event->run($options);
        break;
    case "get_events":
        $get_events = new Get_events();
        $get_events->run();
        break;
    case "send_events":
        $events = EventHandler::handleEvent();
        $sender = new EventSender();
        foreach ($events as $event) {
            $eventParametrs["message"] = $event['text'];
            $eventParametrs["receiver"] = $event['receiver'];
            $sender->run($eventParametrs);
        }
        break;
    case 'deamon_events_sender':
        $deamon = new DeamonEventsSender();
        $deamon->run();
        break;
    default:
        die("Error command - invalid command: " . $command . "\n");
}